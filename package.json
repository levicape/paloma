{
  "name": "@levicape/paloma",
  "version": "0.0.0-local.0",
  "author": "Pedro Cardona",
  "bin": {
    "@levicape/paloma": "module/cli/bin.mjs",
    "paloma": "module/cli/bin.mjs"
  },
  "config": {
    "packagemanager": "pnpm",
    "packageexecutor": "pnpm exec",
    "outpath": "./module",
    "binpath": "./src/cli/bin.mts",
    "clipath": "./module/cli/bin.mjs",
    "lintpaths": "./src ./examples ./iac"
  },
  "dependencies": {
    "@stricli/core": "catalog:cli",
    "aws-lambda-ric": "catalog:aws",
    "better-sqlite3": "catalog:database",
    "knex": "catalog:database",
    "ksuid": "catalog:id"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@levicape/fourtwo": "catalog:",
    "@types/better-sqlite3": "catalog:types",
    "@types/node": "catalog:types",
    "depcheck": "catalog:package",
    "nx": "catalog:package",
    "publint": "catalog:package",
    "syncpack": "catalog:package",
    "tsx": "catalog:dev",
    "typescript": "catalog:dev"
  },
  "engines": {
    "node": ">=23.6.0"
  },
  "exports": {
    ".": "./module/harness/index.mjs",
    "./bootstrap": "./module/bootstrap/index.mjs",
    "./materials": "./module/materials/index.mjs",
    "./cli": "./module/cli/index.mjs",
    "./debug": "./module/debug/index.mjs",
    "./repository": "./module/repository/index.mjs"
  },
  "files": [
    "module"
  ],
  "license": "AGPL-3.0-only",
  "nx": {
    "targets": {
      "dx:precommit": {
        "dependsOn": [
          "dx:prepublish",
          "nx:test"
        ]
      },
      "dx:prepublish": {
        "dependsOn": [
          "@levicape/paloma-iac-stacks:dx:precommit",
          "@levicape/paloma-ui-nevada:dx:precommit"
        ]
      },
      "dx:test": {
        "dependsOn": [
          "dx:lint",
          "nx:test"
        ]
      },
      "nx:compile": {
        "dependsOn": [
          "build:tsc",
          "@levicape/paloma-examples:nx:compile",
          "@levicape/paloma-ui-nevada:nx:compile"
        ]
      },
      "nx:sync": {
        "dependsOn": [
          "iac-workflows:nx:sync"
        ]
      },
      "nx:test": {
        "dependsOn": [
          "test:unit",
          "@levicape/paloma-examples:nx:test",
          "@levicape/paloma-ui-nevada:nx:test"
        ]
      }
    }
  },
  "packageManager": "pnpm@9.15.0+sha512.76e2379760a4328ec4415815bcd6628dee727af3779aaa4c914e3944156c4299921a89f976381ee107d41f12cfa4b66681ca9c718f0668fa0831ed4c6d8ba56c",
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "repository": "github:levicape/paloma",
  "scripts": {
    "build": "$npm_package_config_packageexecutor nx nx:compile",
    "build:tsc": "$npm_package_config_packageexecutor tsc",
    "clean": "rm -rf $npm_package_config_outpath",
    "clean:packages": "rm -rf **/node_modules && $npm_package_config_packageexecutor nx reset",
    "commit": "$npm_package_config_packageexecutor nx dx:precommit --no-cloud --verbose",
    "dx:cli:bin": "NODE_NO_WARNINGS=1 $npm_package_config_packageexecutor tsx $npm_package_config_binpath",
    "dx:cli:dev": "node --inspect-brk --import tsx $npm_package_config_binpath",
    "dx:cli:mjs": "NODE_NO_WARNINGS=1 node $npm_package_config_clipath",
    "dx:commit": "$npm_package_config_packagemanager run clean:packages && $npm_package_config_packageexecutor nx dx:precommit --no-cloud --verbose",
    "dx:lint": "$npm_package_config_packageexecutor nx nx:compile && $npm_package_config_packageexecutor nx lint:format && $npm_package_config_packageexecutor nx package:format",
    "dx:precommit": "$npm_package_config_packageexecutor nx dx:precommit:pre && $npm_package_config_packageexecutor nx dx:sync && $npm_package_config_packageexecutor nx package:deps",
    "dx:precommit:pre": "echo \"Starting precommit dx. This will recompile iac files and check package.json dependencies.\"",
    "dx:prepublish": "$npm_package_config_packageexecutor nx dx:prepublish:pre && $npm_package_config_packageexecutor nx dx:lint && $npm_package_config_packageexecutor nx prepublish",
    "dx:prepublish:pre": "echo \"Starting prepublish dx. This will compile the package, lint it, format package.json and verify all exports are valid. \"",
    "dx:sync": "$npm_package_config_packageexecutor nx dx:sync:pre && $npm_package_config_packageexecutor nx nx:sync --verbose",
    "dx:sync:pre": "echo \"Starting sync dx. This will generate all the workflows and sync them with the repository.\"",
    "heroku-prebuild": "npm rebuild aws-lambda-ric",
    "lint": "$npm_package_config_packageexecutor nx exec -- biome check $npm_package_config_lintpaths",
    "lint:format": "$npm_package_config_packageexecutor nx exec -- biome check --write $npm_package_config_lintpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor nx exec -- biome check --write --unsafe $npm_package_config_lintpaths",
    "package:deps": "$npm_package_config_packageexecutor nx exec -- depcheck",
    "package:fix": "$npm_package_config_packageexecutor nx exec -- syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor nx exec -- syncpack format",
    "package:update": "$npm_package_config_packageexecutor nx exec -- syncpack update",
    "postclean:packages": "$npm_package_config_packagemanager install",
    "precommit": "$npm_package_config_packageexecutor nx dx:prepublish --no-cloud --verbose",
    "predx:lint": "$npm_package_config_packageexecutor nx clean",
    "prelint": "$npm_package_config_packageexecutor nx exec -- biome format $npm_package_config_lintpaths",
    "prepublish": "$npm_package_config_packageexecutor publint --strict",
    "test": "$npm_package_config_packageexecutor nx nx:test --verbose",
    "test:example": "$npm_package_config_packageexecutor nx nx:test @levicape/paloma-examples --verbose",
    "test:unit": "node --experimental-strip-types --experimental-test-coverage --test --test-reporter junit --test-reporter-destination test-unit.junit.xml  \"module/**/*.test.(mjs|cjs|js)\"",
    "xx:workflow": "$npm_package_config_packageexecutor nx run-many -t build,lint,test --parallel=1 --verbose --no-cloud"
  },
  "type": "module",
  "types": "./module/harness/index.d.mts"
}
