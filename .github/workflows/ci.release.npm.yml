name: Release NPM - Publish to npm registry

on:
  release:
    types: [released]

env:
  NPM_REGISTRY_PROTOCOL: 'https'
  NPM_REGISTRY_HOST: 'npm.pkg.github.com'
  GITHUB_REPOSITORY_OWNER: 'levicape'

jobs:
  npm:
    name: Publish to npm registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Verify registry url
        run: |
          echo 'NPM_REGISTRY_URL: ${{ vars.NPM_REGISTRY_PROTOCOL }}://${{ vars.NPM_REGISTRY_HOST }}/api/packages/${{ env.GITHUB_REPOSITORY_OWNER }}/npm/'
          echo "If this fails, try adding the following to your /etc/docker/daemon.json file:"
          echo '{
            "insecure-registries": ["${{ vars.NPM_REGISTRY_PROTOCOL }}//${{ vars.NPM_REGISTRY_HOST }}"],
            "mtu": 1450
          }'
          curl -v ${{ vars.NPM_REGISTRY_PROTOCOL }}://${{ vars.NPM_REGISTRY_HOST }} --insecure
        continue-on-error: true

      - uses: pnpm/action-setup@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '23.x'
          registry-url: ${{ vars.NPM_REGISTRY_PROTOCOL }}://${{ vars.NPM_REGISTRY_HOST }}
          token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
          scope: '@levicaper'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install and test
        run: |
          pnpm install;
          pnpm run test;
      - name: Increment version
        run: | 
          export PREID=${{ env.GITHUB_SHA }};
          export PREID=${PREID:0:10};
          export ARGS="--git-tag-version=false --commit-hooks=false";
          pnpm version ${{ env.GITHUB_REF_NAME }}-$PREID.${{ env.GITHUB_RUN_NUMBER }} $ARGS --allow-same-version;
      - name: Publish to npm registry
        if: success()
        run: |
          pnpm publish --no-git-checks;
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}